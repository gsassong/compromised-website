{"version":3,"sources":["components/header.jsx","components/platforms.jsx","components/services.jsx","components/image.jsx","components/gallery.jsx","components/testimonials.jsx","components/Team.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","props","id","className","data","title","paragraph","href","Platforms","src","ios","icon","alt","text","label","android","Services","spyware","map","d","i","image","name","Image","largeImage","smallImage","data-lightbox-gallery","Gallery","Testimonials","img","Team","job","initialState","email","message","Contact","setState","useState","handleChange","e","value","target","prevState","validate","onSubmit","preventDefault","console","log","emailjs","sendForm","then","result","error","type","placeholder","required","onChange","rows","address","phone","facebook","twitter","youtube","rel","SmoothScroll","speed","speedAsDuration","App","document","location","hostname","ReactGA","initialize","pageview","window","pathname","search","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0d0fac31.chunk.js","sourcesContent":["export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Platforms = (props) => {\n  return (\n    <div id='platforms' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>Platforms</h2>\n        </div>\n        {props.data &&\n          <div className='row'>\n            <div key={`${props.data.ios.label}`} className='col-xs-12 col-md-6'>\n              {' '}\n              <img src={props.data.ios.icon} className=\"img-responsive center-block\" alt=\"\" />{\" \"}\n              <h3>{props.data.ios.title}</h3>\n              <p>{props.data.ios.text}</p>\n            </div>\n            <div key={`${props.data.android.label}`} className='col-xs-12 col-md-6'>\n              {' '}\n              <img src={props.data.android.icon} className=\"img-responsive center-block\" alt=\"\" />{\" \"}\n              <h3>{props.data.android.title}</h3>\n              <p>{props.data.android.text}</p>\n            </div>\n          </div>\n        }\n\n      </div>\n    </div>\n  )\n}\n","export const Services = (props) => {\n  return (\n    <div id='services' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>{props.data && props.data.title}</h2>\n          <p>\n           {props.data && props.data.text}\n          </p>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.spyware.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-4'>\n                  {' '}\n                  <div className=\"\">\n                  <img src={d.image} className=\"img-responsive center-block\" alt=\"\"></img>\n                  </div>\n                  <div className='service-desc'>\n                    <h3>{d.name}</h3>\n                    <p>{d.text}</p>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Image = ({ title, largeImage, smallImage }) => {\n  return (\n    <div className='portfolio-item'>\n      <div className='hover-bg'>\n        {' '}\n        <a\n          href={largeImage}\n          title={title}\n          data-lightbox-gallery='gallery1'\n        >\n          <div className='hover-text'>\n            <h4>{title}</h4>\n          </div>\n          <img\n            src={smallImage}\n            className='img-responsive'\n            alt={title}\n          />{' '}\n        </a>{' '}\n      </div>\n    </div>\n  )\n}","import { Image } from \"./image\";\n\nexport const Gallery = (props) => {\n  return (\n    <div id='portfolio' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Gallery</h2>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed\n            dapibus leonec.\n          </p>\n        </div>\n        <div className='row'>\n          <div className='portfolio-items'>\n            {props.data\n              ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-sm-6 col-md-4 col-lg-4'>\n                  <Image title={d.title} largeImage={d.largeImage} smallImage={d.smallImage} />\n                </div>\n              ))\n              : 'Loading...'}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Testimonials = (props) => {\n  return (\n    <div id='testimonials'>\n      <div className='container'>\n        <div className='section-title text-center'>\n          <h2>What our clients say</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-4'>\n                  <div className='testimonial'>\n                    <div className='testimonial-image'>\n                      {' '}\n                      <img src={d.img} alt='' />{' '}\n                    </div>\n                    <div className='testimonial-content'>\n                      <p>\"{d.text}\"</p>\n                      <div className='testimonial-meta'> - {d.name} </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Team = (props) => {\n  return (\n    <div id='team' className='text-center'>\n      <div className='container'>\n        <div className='col-md-8 col-md-offset-2 section-title'>\n          <h2>Meet the Team</h2>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed\n            dapibus leonec.\n          </p>\n        </div>\n        <div id='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-3 col-sm-6 team'>\n                  <div className='thumbnail'>\n                    {' '}\n                    <img src={d.img} alt='...' className='team-img' />\n                    <div className='caption'>\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport emailjs from 'emailjs-com'\n\nconst initialState = {\n  name: '',\n  email: '',\n  message: '',\n}\nexport const Contact = (props) => {\n  const [{ name, email, message }, setState] = useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setState((prevState) => ({ ...prevState, [name]: value }))\n  }\n  const clearState = () => setState({ ...initialState })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(name, email, message)\n    emailjs\n      .sendForm(\n        'YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID'\n      )\n      .then(\n        (result) => {\n          console.log(result.text)\n          clearState()\n        },\n        (error) => {\n          console.log(error.text)\n        }\n      )\n  }\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n                <h2>Get In Touch</h2>\n                <p>\n                  Please fill out the form below to send us an email and we will\n                  get back to you as soon as possible.\n                </p>\n              </div>\n              <form name='sentMessage' validate onSubmit={handleSubmit}>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='name'\n                        name='name'\n                        className='form-control'\n                        placeholder='Name'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='email'\n                        id='email'\n                        name='email'\n                        className='form-control'\n                        placeholder='Email'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    rows='4'\n                    placeholder='Message'\n                    required\n                    onChange={handleChange}\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n                </div>\n                <div id='success'></div>\n                <button type='submit' className='btn btn-custom btn-lg'>\n                  Send Message\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className='col-md-3 col-md-offset-1 contact-info'>\n            <div className='contact-item'>\n              <h3>Contact Info</h3>\n              <p>\n                <span>\n                  <i className='fa fa-map-marker'></i> Address\n                </span>\n                {props.data ? props.data.address : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-phone'></i> Phone\n                </span>{' '}\n                {props.data ? props.data.phone : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-envelope-o'></i> Email\n                </span>{' '}\n                {props.data ? props.data.email : 'loading'}\n              </p>\n            </div>\n          </div>\n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.facebook : '/'}>\n                      <i className='fa fa-facebook'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.twitter : '/'}>\n                      <i className='fa fa-twitter'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.youtube : '/'}>\n                      <i className='fa fa-youtube'></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2020 Issaaf Kattan React Land Page Template. Design by{' '}\n            <a href='http://www.templatewire.com' rel='nofollow'>\n              TemplateWire\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport ReactGA  from 'react-ga';\n// import { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Platforms } from \"./components/platforms\";\n// import { About } from \"./components/about\";\nimport { Services } from \"./components/services\";\nimport { Gallery } from \"./components/gallery\";\nimport { Testimonials } from \"./components/testimonials\";\nimport { Team } from \"./components/Team\";\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const TRACKING_ID = \"UA-217892910-1\";\n  if(document.location.hostname !== 'localhost') {\n    console.log(\"sending google analytics\", document.location.hostname);\n    ReactGA.initialize(TRACKING_ID);\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      {/* <Navigation data={landingPageData.Navigation} /> */}\n      <Header data={landingPageData.Header} />\n      <Platforms data={landingPageData.Platforms} />\n      {/* <About data={landingPageData.About} /> */}\n      <Services data={landingPageData.Services} />\n      <Gallery data={landingPageData.Gallery}/>\n      <Testimonials data={landingPageData.Testimonials} />\n      <Team data={landingPageData.Team} />\n      <Contact data={landingPageData.Contact} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}